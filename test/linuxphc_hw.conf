; ######### ptpd 2.3.2-linuxphc configuration


; #### BEGIN Required settings - need changed

; Interface PTPd is running on
ptpengine:interface=changeme
; PTP domain number
ptpengine:domain=changeme

; #### END Required Settings

; Enable / disable hardware timestamping and hardware clock sync
ptpengine:hardware_timestamping=y

; #### BEGIN Basic PTP settings

ptpengine:preset=slaveonly
ptpengine:delay_mechanism=E2E
; other options: hybrid, unicast
ptpengine:ip_mode=multicast
; wait 15 seconds on master changes, let PTP offset stabilise
ptpengine:calibration_delay=15

; ptpengine:unicast_negotiation=n

; #### END Basic PTP settings

; #### BEGIN Filter configuration

ptpengine:sync_outlier_filter_enable=y
ptpengine:sync_outlier_filter_autotune_enable=y
ptpengine:sync_stat_filter_enable=y
ptpengine:sync_outlier_filter_stepdetect_enable=y
ptpengine:sync_outlier_filter_stepdetect_threshold = 1000000
ptpengine:sync_outlier_filter_stepdetect_level = 200000
ptpengine:delay_outlier_filter_enable=y
ptpengine:delay_outlier_filter_autotune_enable=y
ptpengine:delay_stat_filter_enable=n
ptpengine:delay_outlier_filter_stepdetect_enable=y
ptpengine:delay_outlier_filter_stepdetect_threshold = 1000000
ptpengine:delay_outlier_filter_stepdetect_level = 200000

; #### END Filter Configuration

; #### BEGIN Clock stability estimates

; If a clock constantly fails to lock (LOCKED state), the low threshold may need lowered
; The current value can be observed in the status file

; Allan deviation estimates for LOCKED and TRACKING, hardware clocks
servo:adev_locked_threshold_low_hw = 50.000000
servo:adev_locked_threshold_high_hw = 500.000000

; Allan deviation estimates for LOCKED and TRACKING, software clocks (system clock)
servo:adev_locked_threshold_low = 200.000000
servo:adev_locked_threshold_high = 2000.000000

; Allan deviation measurement period
servo:adev_interval = 10

; #### END Clock stability estimates

; #### BEGIN Other settings

; panic mode: delay when clock step detected
ptpengine:panic_mode=y
ptpengine:panic_mode_duration=60

; alarm support
global:enable_alarms=y
global:alarm_initial_delay=60
global:alarm_timeout=30

; alarm when offset exceeds 100 us
ptpengine:offset_alarm_threshold=100000

; do not allow a software clock (system clock) to be stepped backwards
clock:allow_step_backwards = N

; allow a hardware clock to be stepped backwards
; this should be set to Y because a NIC may randomly reset the clock
clock:allow_step_backwards_hw = Y

; bind to selected CPU core for improved system latency characteristics
; core 0 = first core
global:cpuaffinity_cpucore = 0

; store best clock frequency in files
clock:store_frequency = Y
; store frequency data in /etc
clock:frequency_directory = /etc

; log file location
global:log_file = /var/log/ptpd.log

; status file location
global:status_file = /var/run/ptpd.status

; PI servo parameters (gains)
; NOTE: If the system clock is steered by a hardware clock,
; software clock gains can be set to the same values as hardware clock gains

; software clock (system clock) control
servo:kp = 0.7
servo:ki = 0.3

; hardware clock control
servo:kp_hardware = 0.7
servo:ki_hardware = 0.3

;clock:extra_clocks="linuxphc:ethX, linuxphc:ethY"
;clock:master_clock_name = "ethA"
;clock:readonly_clock_names="ethB"
;clock:excluded_clock_names="ethC"

; #### END Other settings

; ######### ptpd 2.3.2-linuxphc configuration END

; always leave a newline in the end
